<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
	                       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	                       http://www.springframework.org/schema/context
	                       http://www.springframework.org/schema/context/spring-context-4.1.xsd
	                       http://www.springframework.org/schema/aop
	                       http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<bean id="userDao" class="aop.UserDaoImpl"></bean>
	<bean id="userDao2" class="aop.UserDaoImpl_2"></bean>
	<bean id="deptDao" class="aop.DeptDaoImpl"></bean>
	
	<bean id="advice" class="aop.advice.LogAdvice"></bean>

	<!-- 配置切面（aspect） = 切入点（pointCut） + 通知（advice） -->
	<aop:config>
		<!-- 切面 -->
		<aop:aspect id="logAspect" ref="advice">
			 <!-- 切入点 -->
			 <aop:pointcut id="pointcut" expression="execution(* aop.*.*(..))"/>
			 
			 <!-- 前置通知:无参数-->
			 <aop:before method="logBefore" pointcut-ref="pointcut"/>
			 <!-- 前置通知:有参数-->
			 <aop:before method="logBeforeWithParams" pointcut="execution(* aop.*.*(..)) and args(param)" arg-names="param"/>
			 
			 <!-- 后置通知 -->
			 <aop:after-returning method="logAfterReturning" pointcut-ref="pointcut" returning="returnValue"/>
			 
			 <!-- 环绕通知 -->
			 <aop:around method="logAround" pointcut-ref="pointcut"/>
			 
			 <!-- 抛出通知 -->
			 <aop:after-throwing method="logAfterThrowing" pointcut-ref="pointcut" throwing="ex"/>
			 
			 <!-- 最终通知 -->
			 <aop:after method="logAfter" pointcut-ref="pointcut"/>
		</aop:aspect>
	</aop:config>
</beans>